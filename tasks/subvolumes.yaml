---
# tasks file for btrfssubvol

- name: "Print information start subvolume configuration"
  ansible.builtin.debug:
    msg: "========== Start configuring subvolume '{{ subvolume.name }}' =========="

# ---------- Preparations ----------

- name: Set variable subvolume_full_path
  ansible.builtin.set_fact:
    subvolume_full_path: "{{ btrfssubvol_rootvol_mount_point }}/@{{ subvolume.name }}"

- name: Check if subvolume already exists
  ansible.builtin.stat:
    path: "{{ subvolume_full_path }}"
  become: true
  register: subvolume_folder

# ---------- Configuration ----------

- name: Create subvolume {{ subvolume.name }}
  ansible.builtin.command:
    cmd: btrfs subvolume create {{ subvolume_full_path }}
  become: true
  changed_when: "subvolume_cmd_create__result.rc == 0"
  failed_when: "subvolume_cmd_create__result.rc != 0"
  register: subvolume_cmd_create__result
  when: not subvolume_folder.stat.exists

- name: Set permissions for subvolume {{ subvolume.name }}
  ansible.builtin.file:
    path: "{{ subvolume_full_path }}"
    owner: "{{ subvolume.owner | default('root') }}"
    group: "{{ subvolume.group | default('root') }}"
    recurse: "{{ subvolume.recurse | default(false) }}"
  become: true
  diff: true
  ignore_errors: "{{ ansible_check_mode }}"

- name: Mount subvol and add fstab entry
  ansible.posix.mount:
    src: "UUID={{ btrfssubvol_device_uuid }}"
    fstype: btrfs
    path: "/media/{{ subvolume.name }}"
    state: mounted
    opts: "defaults,noatime,discard,compress=zstd,subvol=/@{{ subvolume.name }}"
    passno: 0
  become: true

# ---------- Clean-Up ----------

- name: Set internal variables to null
  ansible.builtin.set_fact:
    subvolume_cmd_create__result: null
    subvolume_folder: null
    subvolume_full_path: null

- name: "Print information finish subvolume configuration"
  ansible.builtin.debug:
    msg: "========== Finished configuring subvolume '{{ subvolume.name }}' =========="

# End of file
